{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_code_project\\\\React Project Practice\\\\redux-shop\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Auth extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"let   form = \", /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\"\n        },\n        onSubmit: values => {\n          this.props.auth(values.email, values.password, this.state.mode);\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (!/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i.test(values.email)) {\n            errors.email = \"Invalid Email Address\";\n          }\n\n          if (!values.password) {\n            errors.password = \"Required\";\n          } else if (values.password.length < 4) {\n            errors.password = \"Must be at least 4 characters!\";\n          }\n\n          if (this.state.mode === \"Sign Up\") {\n            if (!values.passwordConfirm) {\n              errors.passwordConfirm = \"Required\";\n            } else if (values.password !== values.passwordConfirm) {\n              errors.passwordConfirm = \"Password Field Does Not Match!\";\n            }\n          }\n\n          return errors;\n        },\n        children: ({\n          values,\n          handleChange,\n          handleSubmit,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px grey solid\",\n            padding: \"15px\",\n            borderRadius: \"7px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"100%\",\n              backgroundColor: \"grey\",\n              color: \"white\"\n            },\n            className: \"btn btn-lg\",\n            onClick: this.switchModeHandler,\n            children: [\" Switch to \", this.state.mode === \"Sign Up\" ? \"Login\" : \"Sign Up\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              placeholder: \"Enter Your Email\",\n              className: \"form-control\",\n              value: values.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              placeholder: \"Password\",\n              className: \"form-control\",\n              value: values.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), this.state.mode === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"passwordConfirm\",\n                placeholder: \"Confirm Password\",\n                className: \"form-control\",\n                value: values.passwordConfirm,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.passwordConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 66\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success\",\n              children: this.state.mode === \"Sign Up\" ? \"Sign Up\" : \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 30\n      }, this), \"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [err, form]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/VS_code_project/React Project Practice/redux-shop/src/components/Auth/Auth.js"],"names":["React","Component","Formik","Alert","Auth","render","email","password","passwordConfirm","values","props","auth","state","mode","errors","test","length","handleChange","handleSubmit","border","padding","borderRadius","width","backgroundColor","color","switchModeHandler","err","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik } from 'formik';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport default class Auth extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                let   form = <Formik\r\n                    initialValues={\r\n                        {\r\n                            email: \"\",\r\n                            password: \"\",\r\n                            passwordConfirm: \"\"\r\n                        }\r\n                    }\r\n                    onSubmit={\r\n                        (values) => {\r\n                            this.props.auth(values.email, values.password, this.state.mode)\r\n                        }\r\n                    }\r\n\r\n                    validate={(values) => {\r\n                        const errors = {};\r\n                        if (!values.email) {\r\n                            errors.email = \"Required\";\r\n                        }\r\n                        else if (!/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i.test(values.email)) {\r\n                            errors.email = \"Invalid Email Address\";\r\n                        }\r\n                        if (!values.password) {\r\n                            errors.password = \"Required\";\r\n                        }\r\n                        else if (values.password.length < 4) {\r\n                            errors.password = \"Must be at least 4 characters!\";\r\n                        }\r\n                        if (this.state.mode === \"Sign Up\") {\r\n                            if (!values.passwordConfirm) {\r\n                                errors.passwordConfirm = \"Required\";\r\n                            }\r\n                            else if (values.password !== values.passwordConfirm) {\r\n                                errors.passwordConfirm = \"Password Field Does Not Match!\";\r\n                            }\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n                >\r\n                    {({ values, handleChange, handleSubmit, errors }) => (\r\n                        <div style={{\r\n                            border: \"1px grey solid\",\r\n                            padding: \"15px\",\r\n                            borderRadius: \"7px\"\r\n                        }}>\r\n                            <button style={{\r\n                                width: \"100%\",\r\n                                backgroundColor: \"grey\",\r\n                                color: \"white\"\r\n                            }} className=\"btn btn-lg\" onClick={this.switchModeHandler}> Switch to {this.state.mode === \"Sign Up\" ? \"Login\" : \"Sign Up\"} </button>\r\n                            <br />\r\n                            <br />\r\n                            <form onSubmit={handleSubmit}>\r\n                                <input name=\"email\"\r\n                                    placeholder=\"Enter Your Email\"\r\n                                    className=\"form-control\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <span style={{ color: \"red\" }}>{errors.email}</span>\r\n                                <br />\r\n                                <input name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    className=\"form-control\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <span style={{ color: \"red\" }}>{errors.password}</span>\r\n                                <br />\r\n                                {this.state.mode === \"Sign Up\" ? <div>\r\n                                    <input\r\n                                        name=\"passwordConfirm\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        className=\"form-control\"\r\n                                        value={values.passwordConfirm}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{errors.passwordConfirm}</span>\r\n                                    <br />\r\n                                </div> : null}\r\n                                <button type=\"submit\" className=\"btn btn-success\">{this.state.mode === \"Sign Up\" ? \"Sign Up\" : \"Login\"}</button>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                </Formik>\r\n\r\n        return (\r\n                <div>\r\n                    {err}\r\n                    {form}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}