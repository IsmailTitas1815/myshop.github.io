{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_code_project\\\\React Project Practice\\\\redux-shop\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useSelector } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport ProductDetails from './components/ProductDetails';\nimport Auth from './components/Auth/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    token\n  } = useSelector(state => state.AuthReducer);\n  let routes = null;\n\n  if (token === null) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Auth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HuWIDNSVXALprLH3avUitvg3hr4=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/VS_code_project/React Project Practice/redux-shop/src/App.js"],"names":["React","useSelector","BrowserRouter","Router","Route","Switch","Provider","store","Nav","Home","Cart","ProductDetails","Auth","App","token","state","AuthReducer","routes"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAYb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA7B;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIH,KAAK,KAAK,IAAd,EAAoB;AAClBG,IAAAA,MAAM,gBACJ,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEL;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAQK;AACHK,IAAAA,MAAM,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3BD;;GAAMM,G;UACcZ,W;;;KADdY,G;AA6BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useSelector } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport ProductDetails from './components/ProductDetails';\nimport Auth from './components/Auth/Auth';\n\n\nconst App = () => {\n  const { token } = useSelector(state => state.AuthReducer);\n  let routes = null;\n\n  if (token === null) {\n    routes = (\n      <Switch>\n        <Route path=\"/login\" component={Auth} />\n        <Redirect to=\"/login\" />\n      </Switch>\n    )\n  }\n  else {\n    routes = (\n      <Switch>\n        \n      </Switch>\n    )\n  }\n  return (\n    <Router>\n      <Provider store={store}>\n        <Nav />\n        \n      </Provider>\n    </Router>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}