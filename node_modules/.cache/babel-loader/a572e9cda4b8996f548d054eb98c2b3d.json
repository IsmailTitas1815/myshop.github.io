{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\n\nconst CartReducer = (state = initState, action) => {\n  let findProduct;\n  let index;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr.id === product.id);\n\n      if (check) {\n        return state;\n      } else {\n        const totalPrice = product.discountPrice * quantity + state.totalPrice;\n        const totalQuantities = quantity + state.totalQuantities;\n        product.quantity = quantity;\n        return { ...state,\n          products: [product, ...state.products],\n          totalPrice,\n          totalQuantities\n        };\n      }\n\n    case \"INC\":\n      findProduct = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n      findProduct.quantity += 1;\n      state.products[index] = findProduct;\n      return { ...state,\n        totalPrice: state.totalPrice + findProduct.discountPrice,\n        totalQuantities: state.totalQuantities + 1\n      };\n\n    case \"DEC\":\n      findProduct = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n\n      if (findProduct.quantity > 1) {\n        findProduct.quantity -= 1;\n      }\n\n      state.products[index] = findProduct;\n      return { ...state,\n        totalPrice: state.totalPrice - findProduct.discountPrice,\n        totalQuantities: state.totalQuantities + 1\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["D:/VS_code_project/React Project Practice/redux-shop/src/store/reducers/CartReducer.js"],"names":["initState","products","totalPrice","totalQuantities","CartReducer","state","action","findProduct","index","type","product","quantity","payload","check","find","pr","id","discountPrice","findIndex"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,UAAU,EAAE,CAFE;AAGdC,EAAAA,eAAe,EAAE;AAHH,CAAlB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAA+B;AAC/C,MAAIC,WAAJ;AACA,MAAIC,KAAJ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,aAAL;AACI,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwBL,MAAM,CAACM,OAArC;AACA,YAAMC,KAAK,GAAGR,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,OAAO,CAACM,EAA5C,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACP,eAAOR,KAAP;AACH,OAFD,MAGK;AACD,cAAMH,UAAU,GAAGQ,OAAO,CAACO,aAAR,GAAwBN,QAAxB,GAAmCN,KAAK,CAACH,UAA5D;AACA,cAAMC,eAAe,GAAGQ,QAAQ,GAAGN,KAAK,CAACF,eAAzC;AACAO,QAAAA,OAAO,CAACC,QAAR,GAAmBA,QAAnB;AACA,eAAO,EACH,GAAGN,KADA;AAEHJ,UAAAA,QAAQ,EAAE,CAACS,OAAD,EAAU,GAAGL,KAAK,CAACJ,QAAnB,CAFP;AAGHC,UAAAA,UAHG;AAIHC,UAAAA;AAJG,SAAP;AAMH;;AACL,SAAK,KAAL;AACII,MAAAA,WAAW,GAAGF,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBJ,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAd;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAeiB,SAAf,CAAyBR,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;AACAL,MAAAA,WAAW,CAACI,QAAZ,IAAwB,CAAxB;AACAN,MAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBD,WAAxB;AACA,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBK,WAAW,CAACU,aAFxC;AAGHd,QAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAwB;AAHtC,OAAP;;AAMJ,SAAK,KAAL;AACII,MAAAA,WAAW,GAAGF,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBJ,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAd;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAeiB,SAAf,CAAyBR,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;;AACA,UAAIL,WAAW,CAACI,QAAZ,GAAuB,CAA3B,EAA6B;AACzBJ,QAAAA,WAAW,CAACI,QAAZ,IAAsB,CAAtB;AACH;;AAEDN,MAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBD,WAAxB;AACA,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBK,WAAW,CAACU,aAFxC;AAGHd,QAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAwB;AAHtC,OAAP;;AAMJ;AACI,aAAOE,KAAP;AA5CR;AA+CH,CAlDD;;KAAMD,W;AAoDN,eAAeA,WAAf","sourcesContent":["const initState = {\r\n    products: [],\r\n    totalPrice: 0,\r\n    totalQuantities: 0,\r\n\r\n}\r\n\r\nconst CartReducer = (state = initState, action) => {\r\n    let findProduct;\r\n    let index;\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\":\r\n            const { product, quantity } = action.payload;\r\n            const check = state.products.find(pr => pr.id === product.id)\r\n            if (check) {\r\n                return state;\r\n            }\r\n            else {\r\n                const totalPrice = product.discountPrice * quantity + state.totalPrice;\r\n                const totalQuantities = quantity + state.totalQuantities;\r\n                product.quantity = quantity;\r\n                return {\r\n                    ...state,\r\n                    products: [product, ...state.products],\r\n                    totalPrice,\r\n                    totalQuantities,\r\n                }\r\n            }\r\n        case \"INC\":\r\n            findProduct = state.products.find(product => product.id === action.payload);\r\n            index = state.products.findIndex(product => product.id === action.payload);\r\n            findProduct.quantity += 1;\r\n            state.products[index] = findProduct;\r\n            return {\r\n                ...state,\r\n                totalPrice: state.totalPrice + findProduct.discountPrice,\r\n                totalQuantities: state.totalQuantities + 1\r\n            }\r\n\r\n        case \"DEC\":\r\n            findProduct = state.products.find(product => product.id === action.payload);\r\n            index = state.products.findIndex(product => product.id === action.payload);\r\n            if (findProduct.quantity > 1){\r\n                findProduct.quantity-=1\r\n            }\r\n\r\n            state.products[index] = findProduct;\r\n            return {\r\n                ...state,\r\n                totalPrice: state.totalPrice - findProduct.discountPrice,\r\n                totalQuantities: state.totalQuantities + 1\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}